{
  "version": 3,
  "sources": ["../../src/js/pagination.ts"],
  "sourcesContent": ["interface PaginationConfig {\n  itemsPerPage?: number;\n  currentPage?: number;\n  totalItems?: number;\n  selectors: {\n    [key: string]: string;\n    gallery: string;\n    itemsPerPageSelect: string;\n    prevButton: string;\n    nextButton: string;\n    pageInfo: string;\n    noResults: string;\n    pagination: string;\n  };\n}\n\nexport class Pagination {\n  private elements: {\n    gallery: HTMLElement;\n    itemsPerPageSelect: HTMLSelectElement;\n    prevButton: HTMLElement;\n    nextButton: HTMLElement;\n    pageInfo: HTMLElement;\n    noResults: HTMLElement;\n    pagination: HTMLElement;\n  };\n\n  private config: {\n    itemsPerPage: number;\n    currentPage: number;\n    totalItems: number;\n  };\n\n  constructor(config: PaginationConfig) {\n    // Get elements using provided selectors\n    const elements = {\n      gallery: document.querySelector(config.selectors.gallery),\n      itemsPerPageSelect: document.querySelector(\n        config.selectors.itemsPerPageSelect,\n      ),\n      prevButton: document.querySelector(config.selectors.prevButton),\n      nextButton: document.querySelector(config.selectors.nextButton),\n      pageInfo: document.querySelector(config.selectors.pageInfo),\n      noResults: document.querySelector(config.selectors.noResults),\n      pagination: document.querySelector(config.selectors.pagination),\n    };\n\n    // Validate that all required elements exist\n    Object.entries(elements).forEach(([key, element]) => {\n      if (!element) {\n        throw new Error(\n          `Required element \"${key}\" not found using selector \"${config.selectors[key]}\"`,\n        );\n      }\n    });\n\n    // Type assertion after validation\n    this.elements = elements as {\n      gallery: HTMLElement;\n      itemsPerPageSelect: HTMLSelectElement;\n      prevButton: HTMLElement;\n      nextButton: HTMLElement;\n      pageInfo: HTMLElement;\n      noResults: HTMLElement;\n      pagination: HTMLElement;\n    };\n\n    this.config = {\n      itemsPerPage:\n        config.itemsPerPage || parseInt(this.elements.itemsPerPageSelect.value),\n      currentPage: config.currentPage || 1,\n      totalItems: config.totalItems || this.elements.gallery.children.length,\n    };\n\n    this.initializeEventListeners();\n    this.updateDisplay();\n  }\n\n  private initializeEventListeners() {\n    this.elements.itemsPerPageSelect.addEventListener(\"change\", () => {\n      this.config.itemsPerPage = parseInt(\n        this.elements.itemsPerPageSelect.value,\n      );\n      this.config.currentPage = 1;\n      this.updateDisplay();\n    });\n\n    this.elements.prevButton.addEventListener(\"click\", () =>\n      this.previousPage(),\n    );\n    this.elements.nextButton.addEventListener(\"click\", () => this.nextPage());\n  }\n\n  private updateDisplay(): void {\n    Array.from(this.elements.gallery.children).forEach(\n      (book) => ((book as HTMLElement).style.display = \"none\"),\n    );\n\n    const start = (this.config.currentPage - 1) * this.config.itemsPerPage + 1;\n    const end = Math.min(\n      this.config.currentPage * this.config.itemsPerPage,\n      this.config.totalItems,\n    );\n\n    Array.from(this.elements.gallery.children)\n      .slice(start - 1, end)\n      .forEach((book) => ((book as HTMLElement).style.display = \"block\"));\n\n    this.elements.pageInfo.textContent = `${start}-${end} of ${this.config.totalItems}`;\n\n    const totalPages = Math.ceil(\n      this.config.totalItems / this.config.itemsPerPage,\n    );\n    this.updateButtonStates(totalPages);\n    this.toggleNoResults(totalPages);\n  }\n\n  private updateButtonStates(totalPages: number): void {\n    if (this.config.currentPage === 1) {\n      this.elements.prevButton.classList.add(\n        \"cursor-not-allowed\",\n        \"opacity-50\",\n      );\n      this.elements.prevButton.setAttribute(\"aria-disabled\", \"true\");\n    } else {\n      this.elements.prevButton.classList.remove(\n        \"cursor-not-allowed\",\n        \"opacity-50\",\n      );\n      this.elements.prevButton.removeAttribute(\"aria-disabled\");\n    }\n\n    if (this.config.currentPage === totalPages || totalPages === 0) {\n      this.elements.nextButton.classList.add(\n        \"cursor-not-allowed\",\n        \"opacity-50\",\n      );\n      this.elements.nextButton.setAttribute(\"aria-disabled\", \"true\");\n    } else {\n      this.elements.nextButton.classList.remove(\n        \"cursor-not-allowed\",\n        \"opacity-50\",\n      );\n      this.elements.nextButton.removeAttribute(\"aria-disabled\");\n    }\n  }\n\n  private toggleNoResults(totalPages: number): void {\n    if (totalPages === 0) {\n      this.elements.noResults.classList.remove(\"hidden\");\n      this.elements.pagination.classList.add(\"hidden\");\n    } else {\n      this.elements.noResults.classList.add(\"hidden\");\n      this.elements.pagination.classList.remove(\"hidden\");\n    }\n  }\n\n  private previousPage(): void {\n    if (this.config.currentPage > 1) {\n      this.config.currentPage--;\n      this.updateDisplay();\n    }\n  }\n\n  private nextPage(): void {\n    const totalPages = Math.ceil(\n      this.config.totalItems / this.config.itemsPerPage,\n    );\n    if (this.config.currentPage < totalPages) {\n      this.config.currentPage++;\n      this.updateDisplay();\n    }\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
